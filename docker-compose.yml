version: '3.8'

services:
  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - ainventory-network

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ainventory:ainventory@db:5432/ainventory
      - SECRET_KEY=your-secret-key-here
      - ENVIRONMENT=production
    depends_on:
      - db
    networks:
      - ainventory-network
    volumes:
      - ./src:/app/src
      - ./app:/app/app

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=ainventory
      - POSTGRES_USER=ainventory
      - POSTGRES_PASSWORD=ainventory
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ainventory-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - ainventory-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - ainventory-network

volumes:
  postgres_data:

networks:
  ainventory-network:
    driver: bridge
